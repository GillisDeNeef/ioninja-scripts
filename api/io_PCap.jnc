//.............................................................................
//
// Pcap (packet-capture) class
//

namespace io {

//.............................................................................

opaque class PCap
{
	char const* autoget property m_filter;
	bool dconst m_isPromiscious;
	bool dconst m_isOpen;
	uint_t m_syncId;

	bool open (
		char const* deviceName,
		char const* filter = null,
		bool isPromiscious = false
		) throws;

	void close ();

	size_t write (
		void const* p,
		size_t size
		) throws;

	size_t read (
		void* p,
		size_t size
		) throws;

	event m_onReadyRead (uint_t syncId);
}

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

PCap* createPCap ();

//.............................................................................

// pcap device enumeration

struct PCapAddress
{
	PCapAddress const* m_next;
	Address_Ip4 m_address;
	Address_Ip4 m_mask;
	Address_Ip4 m_broadcast;
}

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

struct PCapDeviceDesc
{
	PCapDeviceDesc const* m_next;
	char const* m_name;
	char const* m_description;
	PCapAddress m_address;
	uint_t m_flags;
}

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

PCapDeviceDesc const* createPCapDeviceDescList (size_t* count = null);

//.............................................................................

} // namespace io {
