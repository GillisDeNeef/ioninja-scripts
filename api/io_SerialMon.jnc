//.............................................................................
//
// SerialMon class
//

namespace io {

//.............................................................................

enum SerialMonEvent
{
	DeviceOpened,
	DeviceClosed,
	RxData,
	TxData,
	BaudRateChanged,
	FlowControlChanged,
	DataBitsChanged,
	StopBitsChanged,
	ParityChanged,
	StatusLineChanged,
	DtrChanged,
	RtsChanged,
}

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

struct SerialMonEventParams
{
	SerialMonEvent m_eventKind;

	void const* m_data;

	union
	{
		size_t m_dataSize;

		uint_t m_baudRate;
		SerialFlowControl m_flowControl;
		uint_t m_dataBits;
		SerialStopBits m_stopBits;
		SerialParity m_parity;
		SerialStatusLines m_statusLines;

		bool m_dtr;
		bool m_rts;
	}
}

//.............................................................................

opaque class SerialMon
{
	bool readonly m_isOpen;
	uint_t m_syncId;

	SerialMon* operator new ();

	bool capture (char const* name) throws;
	void close ();

	bool read (SerialMonEventParams* params) throws;
	
	event m_onReadyRead (uint_t syncId);
}

//.............................................................................

} // namespace io {
