#include "SerialFilter.h"
#include "SerialLog.h"
#include "SerialSettings.h"

#pragma once

#include "Log.h"

__enum ESerialFilter
{
	Tx                = 0x01,
	Rx                = 0x02,
	OpenClose         = 0x04,
	SettingChange     = 0x08,
	ControlLineChange = 0x10,
	StatusLineChange  = 0x20,	
};

//.............................................................................

interface ISerialFilter: ILogPostProcessor
{
	union
	{
		struct
		{
			ulong_t m_Tx:1;
			ulong_t m_Rx:1;
			ulong_t m_OpenClose:1;
			ulong_t m_SettingChange:1;
			ulong_t m_ControlLineChange:1;
			ulong_t m_StatusLineChange:1;	
		};
		
		ulong_t m_Filter;
	};
};

class CSerialFilter: ISerialFilter;

//.............................................................................


//.............................................................................

class CSerialFilter: ISerialFilter
{
	void CSerialFilter();
};

void CSerialFilter::CSerialFilter()
{
	m_Filter = g_SerialDefaultSettings.m_Filter;
}

bool CSerialFilter::PostProcess(ILogMessageFile SecondaryFile, ulong_t Code, const void* p, size_t Size)
{
	bool IsVisible = true;

	switch (Code)
	{
	case ESerialMsg::PortOpen:
	case ESerialMsg::PortClose:
	case ESerialMsg::PortOpenError:
		IsVisible = !(m_Filter & ESerialFilter::OpenClose);
		break;

	case ESerialMsg::BaudRateChange:
	case ESerialMsg::DataBitsChange:
	case ESerialMsg::StopBitsChange:
	case ESerialMsg::ParityChange:
	case ESerialMsg::FlowControlChange:
		IsVisible = !(m_Filter & ESerialFilter::SettingChange);
		break;

	case ESerialMsg::RTSChange:
	case ESerialMsg::DTRChange:
		IsVisible = !(m_Filter & ESerialFilter::ControlLineChange);
		break;

	case ESerialMsg::StatusLineChange:
		IsVisible = !(m_Filter & ESerialFilter::StatusLineChange);
		break;

	case EStdLogMsg::Tx:
		IsVisible = !(m_Filter & ESerialFilter::Tx);
		break;

	case EStdLogMsg::Rx:
		IsVisible = !(m_Filter & ESerialFilter::Rx);
		break;
	}

	if (IsVisible)
		SecondaryFile.Write(Code, p, Size);

	return true;
}

void CSerialFilter::Reset()
{
}

//.............................................................................

