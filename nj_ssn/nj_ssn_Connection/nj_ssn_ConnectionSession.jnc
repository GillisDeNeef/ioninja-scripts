//.............................................................................
//
// Connection session
//

//.............................................................................

class ConnectionSession: doc.Session
{
protected:
	io.ConnectionSocket* m_socket;
	gui.ComboBox* m_addressCombo;

public:
	construct (doc.DocumentHost* documentHost);

protected:
	onConnect ();
	onDisconnect ();

	onConnectComplete (bool result);
	onRemoteDisconnect (bool isReset);
}

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

ConnectionSession.construct (doc.DocumentHost* documentHost)
{
	basetype.construct (documentHost);

	// transport & log

	m_socket = io.createConnectionSocket ();
	documentHost.m_log.m_representer = ConnectionLogRepresenter.getSingleton ();

	// toolbar & menu

	gui.Icon* icon;
	gui.Action* action;
	gui.ComboBox* combo;

	documentHost.m_toolbar.addLabel ("Address ");
	combo = documentHost.m_toolbar.addComboBox (-1);
	combo.m_isEditable = true;
	combo.m_editText = "127.0.0.1:23";
	m_addressCombo = combo;

	icon = gui.loadIcon ("connect.png");
	action = gui.createAction ("Connect", icon);
	action.m_onTriggered += onConnect;
	documentHost.m_menu.addAction (action);
	documentHost.m_toolbar.addAction (action);

	icon = gui.loadIcon ("pause.png");
	action = gui.createAction ("Disconnect", icon);
	action.m_onTriggered += onDisconnect;
	documentHost.m_menu.addAction (action);
	documentHost.m_toolbar.addAction (action);

	// no properties

	documentHost.m_propertyGrid.m_isVisible = false;
}

ConnectionSession.onConnect ()
{
	if (m_socket.m_isConnected)
		return;

	char const* text = m_addressCombo.m_editText;

/*	m_documentHost.m_log.write (
		ConnectionLogPacketCode.PortClosed,
		m_portName,
		strlen (m_portName) + 1
		); */

	m_socket.connect (text, onConnectComplete);
}

ConnectionSession.onDisconnect ()
{
	if (!m_socket.m_isConnected)
		return;

	m_socket.disconnect ();
}

ConnectionSession.onConnectComplete (bool result)
{
	printf ("ConnectionSession.onConnectComplete (%d)\n", result);

/*	m_documentHost.m_log.write (
		ConnectionLogPacketCode.PortClosed,
		m_portName,
		strlen (m_portName) + 1
		); */
}

ConnectionSession.onRemoteDisconnect (bool isReset)
{
	printf ("ConnectionSession.onRemoteDisconnect (%d)\n", isReset);

/*	m_documentHost.m_log.write (
		ConnectionLogPacketCode.PortClosed,
		m_portName,
		strlen (m_portName) + 1
		); */
}

//.............................................................................
