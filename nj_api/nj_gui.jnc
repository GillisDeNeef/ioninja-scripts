//.............................................................................
//
// Ninja GUI declarations
//

namespace gui {

//.............................................................................

// colors

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

enumf ColorFlags
{
	Transparent  = 0x80000000,
	Index        = 0x40000000,
	IndexMask    = 0x0fffffff,
}

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

enum StdColor
{
	Black        = 0x000000,
	White        = 0xffffff,
	Gray         = 0x808080,
	Red          = 0x800000,
	Green        = 0x008000,
	Blue         = 0x000080,
	Purple       = 0x800080,
	Cyan         = 0x008080,

	LightRed     = 0xff0000,
	LightGreen   = 0x00ff00,
	LightBlue    = 0x0000ff,
	LightPurple  = 0xff00ff,
	LightCyan    = 0x00ffff,

	PastelGray   = 0xefefef,
	PastelRed    = 0xffe4e1,
	PastelOrange = 0xfffacd,
	PastelYellow = 0xffffc0,
	PastelGreen  = 0xe1fada,
	PastelCyan   = 0xcdfaff,
	PastelBlue   = 0xe2edff,
	PastelPurple = 0xe2dafd,
}

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

struct ColorAttr
{
	uint_t m_foreColor;
	uint_t m_backColor;
}

//.............................................................................

// text

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

enumf FontFlags
{
	Bold,
	Italic,
	Underline,
	Strikeout,

	Transparent,
}

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

struct TextAttr: ColorAttr
{
	FontFlags m_fontFlags;
}

//.............................................................................

// icons

opaque class Icon
{
}

Icon* loadIcon (const char* fileName);

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

// actions

opaque class Action
{	
	event m_onTriggered ();
}

Action* createAction (
	char const* text,
	Icon* icon = null
	);

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

// menu

opaque class Menu
{
	addAction (Action* action);
	addSeparator ();
}

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

// toolbar

opaque class ToolBar
{
	addAction (Action* action);
	addLabel (const char* pText);
	addComboBox ();
	addSeparator ();
}

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

// property grid

opaque class PropertyGrid
{
	addProperty (
		uint_t propertyId,
		size_t iconIdx,
		size_t type,
		int Value,
		char const* name,
		char const* tooltipText
		);
}

//.............................................................................

} // namespace gui {
