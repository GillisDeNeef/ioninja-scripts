//.............................................................................
//
// File and memory-mapped file classes
//

namespace io {

//.............................................................................

fenum FileOpenFlags
{
	ReadOnly,
	OpenExisting,
	Exclusive,
	ShareWrite,
	DeleteOnClose,
	AsyncRead,
}

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

opaque class File
{
	bool dconst m_isOpen;

	bool open (
		char const* name,
		FileOpenFlags flags = 0
		) throws;

	void close ();

	size_t write (
		void const* p,
		size_t size
		) throws;

	size_t read (
		void* p,
		size_t size
		) throws;

	event m_onReadyRead ();
}

//.............................................................................
/*
// mapped file automatically maps (or reuses) views

opaque class MappedFile
{
	size_t dconst m_permementViewCount;
	size_t autoget property m_dynamicViewLimit;

	bool dconst m_isOpen;

	bool open (
		char const* name,
		FileOpenFlags flags = 0
		) throws;

	void close ();

	void* view (
		size_t offset,
		size_t size,
		bool isPermanent = false
		) throws;
}
*/
//.............................................................................

// work on POSIX only

bool createFifoFile (char const* name);
bool unlinkFifoFile (char const* name);

//.............................................................................

// create functions (to be removed)

File* createFile ();
//MappedFile* createMappedFile ();

//.............................................................................

} // namespace io {
