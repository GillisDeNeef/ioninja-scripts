//.............................................................................
//
//  IO Ninja IDE Wizard -- Syntax highlighter layer 
//

[wizard]
name        = "Syntax Highlighter"
description = "Generates a plugin which generates a secondary log with syntax-highlighted binary data"

[variable]
id          = pluginName
name        = "Layer Name"
value       = "My Syntax Highlighter"

[variable]
id          = pluginDescription
name        = "Layer Description"
value       = "Wizard-generated layer (analyzes a log and generates a secondary log with syntax-highlighted binary data)"

[variable]
id          = pluginId
name        = "Layer ID"
value       = my-colorizer

[variable]
id          = pluginPrefix
name        = "Plugin Prefix"
value       = MySyntax

[variable]
id          = layerClass
name        = "Layer Class"
readOnly    = true
value       = $(pluginPrefix)Layer
rebuildOn   = pluginPrefix

[variable]
id          = highlighterClass
name        = "Highlighter Class"
readOnly    = true
value       = $(pluginPrefix)Highlighter
rebuildOn   = pluginPrefix

[variable]
id          = layerFile
name        = "Layer File"
readOnly    = true
value       = $(layerClass).jnc
rebuildOn   = layerClass

[variable]
id          = highlighterFile
name        = "Highlighter File"
readOnly    = true
value       = $(highlighterClass).jnc
rebuildOn   = highlighterClass

//. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

[file]
source = Layer.njplg.in
target = $(projectName).njplg
interpolate = true

[file]
source = Layer.jnc.in
target = $(layerFile)
interpolate = true

[file]
source = Highlighter.jnc.in
target = $(highlighterFile)
interpolate = true

[file]
source = images
target = images
